# this is a star travel project
new content

git init   初始化git仓库
git add    跟踪，提交到暂存区
commit     把暂存区的文件提交到git上去
git log    查看git的提交日志
git status 查看git的文件提交状态
git diff   比较历史提交和工作区的不同
git diff --staged 比较历史提交和暂存区的不同
git rm     删除暂存区的文件  （再用git commit -m “xxx” 来进行确认？）
git mv     修改文件的名字   （再用 git commit -m "xxx" 来进行确认？）
git checkout --  filename  在工作区撤销文件修改(永久撤销，不能后悔)
git stash 在工作区撤销文件修改(暂时撤销，如果后悔刚才的撤销，那么用git stash apply 来撤销刚才所做的撤销操作)
git reset HEAD <files>  把暂存区撤销修改到工作区
git reset --hard <commit> 把历史提交撤销修改
git tag 查看标签
git tag -a v1.0 -m "my version v1.0" 给最近历史提交的版本附上标签
git tag -a v1.0 -m "my version v1.0" <commit>  给特定的历史版本附上标签
git branch 查看分支情况
git branch xxx 创建分支
git branch -d xxx 删除分支
git branch -D xxx 强力删除分支
git branch --merge 查看合并情况
git branch --no-merge 查看没有合并情况
git checkout xxx  切换分支
git merge xxx  合并分支
。如果合并对于一个文件修改冲突，那么只要修改这个文件，然后git add file->git commit -m "xx.xxx"提交即可。
git checkout -b xxx  创建并合并分支
。基于前一个分支的重演合并(分三步)
git rebase branch1  branch2
git checkout branch1
git merge branch2
。如果重演合并对于一个文件修改冲突，那么产生一个临时分支，供你修改这个文件。然后使用git add file ，最后使用git rebase --continue 解决冲突。